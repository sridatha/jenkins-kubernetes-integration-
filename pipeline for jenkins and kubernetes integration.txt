node{
    
    stage("Git Clone"){
        git credentialsId: 'GIT_CREDENTIALS', url: 'https://github.com/sridatha/spring-boot-mongo-docker.git'
}

    stage("Maven Clean Build"){
        
        def mavenHome = tool name:"Maven-3.6.1", type:"maven"
        def mavenCMD ="${mavenHome}/bin/mvn"
        
        sh "${mavenCMD} clean package"

    }
    
    stage("Build Docker Image"){
        sh "docker build -t sridatha/springboot ."
    
    stage("Docker push"){
        withCredentials([string(credentialsId: 'DOCKER_HUB_CREDENTIALS', variable: 'DOCKER_HUB_CREDENTIALS')]) {
            sh "docker login -u sridatha -p ${DOCKER_HUB_CREDENTIALS}"
}
                sh "docker push sridatha/springboot"
    }
    /**
    stage("Deploy Application in K82 Cluster"){
        kubernetesDeploy(
            configs: 'springBootMongo.yml',
            kubeconfigId: 'KUBERNETES_CLUSTER_CONFIG',
            enableConfigSubstitution: true
            )
        
    }
    **/
    stage("Deploy To Kubernetes Cluster"){
        sh "kubectl apply -f springBootMongo.yml"
    }
    }
}
